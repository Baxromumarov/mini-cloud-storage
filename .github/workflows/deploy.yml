name: Deploy Backend to AWS EC2

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'  # Replace with your exact Python version

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('backend/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Deploy to EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USER: ${{ secrets.EC2_USER }}
          EC2_KEY_PATH: ${{ secrets.EC2_KEY_PATH }}
        run: |
          # Copy the backend directory to your EC2 instance using SCP
          scp -i $EC2_KEY_PATH -o StrictHostKeyChecking=no -r ./backend $EC2_USER@$EC2_HOST:/home/$EC2_USER/your-backend-directory

          # SSH into the EC2 instance and run the backend deployment
          ssh -i $EC2_KEY_PATH -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            cd /home/$EC2_USER/your-backend-directory
            source venv/bin/activate  # Activate virtualenv (if used)
            pip install -r requirements.txt  # Install any missing dependencies
            nohup python app.py > app.log 2>&1 &  # Run the app in the background
          EOF